package com.example.srecko.agrohelper;

import android.Manifest;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.location.GpsSatellite;
import android.location.Location;
import android.location.LocationManager;
import android.provider.Settings;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.FragmentActivity;
import android.location.LocationListener;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Toast;

//import com.google.android.gms.location.LocationListener;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import com.google.android.gms.maps.model.Polygon;
import com.google.android.gms.maps.model.PolygonOptions;
import com.google.maps.android.kml.KmlLayer;

import java.io.InputStream;
import java.util.ArrayList;


public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {
    public MapsActivity() {
    }

    private class LocListener implements LocationListener {
        @Override
        public void onLocationChanged(Location location) {
            Toast.makeText(getBaseContext(), "Location changed : Lat: " +
                            location.getLatitude() + " Lng: " + location.getLongitude(),
                    Toast.LENGTH_SHORT).show();
            String longitude = "Longitude: " + location.getLongitude();
            lat = location.getLatitude();
            lon = location.getLongitude();
            Log.v(TAG, longitude);
            String latitude = "Latitude: " + location.getLatitude();
            Log.v(TAG, latitude);
        }
        @Override
        public void onStatusChanged(String provider, int status, Bundle extras) {
        }
        @Override
        public void onProviderEnabled(String provider) {
        }
        @Override
        public void onProviderDisabled(String provider) {
        }
    }
    KmlLayer layer=null;
    private ArrayList<LatLng> tocke;
    private GoogleMap mMap;
    private LocationManager lManager = null;
    private LocationListener lListener = null;
   // private double lon = 15.6, lat = 46.6;
    private double lon, lat;
    private static final String TAG = "Debug";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_maps);
        //points on the map
        tocke= new ArrayList<>();
        tocke.add(new LatLng(45f,10f));
        tocke.add(new LatLng(55f,10f));
        tocke.add(new LatLng(45f,15f));
        tocke.add(new LatLng(65f,10f));

        //layer = new KmlLayer(mMap, InputStream,getApplicationContext());
        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                .findFragmentById(R.id.map);
        mapFragment.getMapAsync(this);
        lManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fabAddPoint);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                updateMap();
                /*Snackbar.make(view, "Marker dodan", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();*/
            }
        });
        FloatingActionButton fabConnect = (FloatingActionButton) findViewById(R.id.fabConnect);
        fabConnect.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                drawOnMap();
                /*Snackbar.make(view, "Marker dodan", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();*/
            }
        });
    }


    private void drawOnMap()
    {
        mMap.clear();
        PolygonOptions polyOption= new PolygonOptions();
        for(int i=0;i<tocke.size();i++)
            polyOption.add(tocke.get(i));
        Polygon poly = mMap.addPolygon(polyOption);

    }
    private void updateMap() {
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            // TODO: Consider calling
            //    ActivityCompat#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for ActivityCompat#requestPermissions for more details.
            return;
        }
        //original must revert back!!!!
        lListener = new LocListener();
        lManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 5000, 10, lListener);
        LatLng place = new LatLng(lat,lon);
        mMap.addMarker(new MarkerOptions().position(place).title("You are here"));
        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(place,5));
        tocke.add(new LatLng(lat,lon));

    }
    private Boolean displayGpsStatus() {
        ContentResolver contentResolver = getBaseContext()
                .getContentResolver();
        boolean gpsStatus = Settings.Secure
                .isLocationProviderEnabled(contentResolver,
                        LocationManager.GPS_PROVIDER);
        if (gpsStatus) {
            return true;

        } else {
            return false;
        }
    }


    /**
     * Manipulates the map once available.
     * This callback is triggered when the map is ready to be used.
     * This is where we can add markers or lines, add listeners or move the camera. In this case,
     * we just add a marker near Sydney, Australia.
     * If Google Play services is not installed on the device, the user will be prompted to install
     * it inside the SupportMapFragment. This method will only be triggered once the user has
     * installed Google Play services and returned to the app.
     */
    @Override
    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;
            // Add a marker in Sydney and move the camera
        updateMap();
         /*LatLng place = new LatLng(0,0);
        mMap.addMarker(new MarkerOptions().position(place).title("You are here"));
        mMap.moveCamera(CameraUpdateFactory.newLatLng(place));*/
        }
    }

